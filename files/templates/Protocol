<?php

namespace {{namespace}};

use Experus\Sockets\Contracts\Protocols\Protocol;
use Experus\Sockets\Core\Server\SocketRequest;

/**
 * Class {{name}} a dummy protocol for sockets.
 * @package {{namespace}}
 */
class {{name}} implements Protocol
{

    /**
         * Extract the intended route from the request.
         *
         * @param SocketRequest $request
         * @return string
         */
        public function route(SocketRequest $request)
        {
            // TODO: Implement route() method.
        }

        /**
         * Return the body of the request, stripping out all meta data such as route, auth, ...
         *
         * @param SocketRequest $request
         * @return string
         */
        public function body(SocketRequest $request)
        {
            // TODO: Implement body() method.
        }

        /**
         * Return the parsed form of the request body as an array, an object or null if this protocol does not support parsing.
         *
         * @param SocketRequest $request
         * @return array|null|object
         * @throws ParseException thrown when parsing fails.
         */
        public function parse(SocketRequest $request)
        {
            // TODO: Implement parse() method.
        }

        /**
         * Serialize a response into the string representation that can be flushed into the sockets.
         *
         * @param array|null|object $data
         * @return string
         * @throws SerializeException when the given response cannot be serialized with this protocol.
         */
        public function serialize($data)
        {
            // TODO: Implement serialize() method.
        }
}